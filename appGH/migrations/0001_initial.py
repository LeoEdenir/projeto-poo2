# Generated by Django 4.1 on 2022-08-30 13:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('patient', 'Paciente'), ('doctor', 'Médico'), ('secretary', 'Secretário'), ('admin', 'Administrador')], max_length=10, verbose_name='Tipo de usuário')),
                ('sexo', models.CharField(choices=[('feminino', 'Feminino'), ('masculino', 'Masculino')], max_length=10, verbose_name='Sexo')),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ('first_name',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Secretario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_admissao', models.DateField(verbose_name='Data de admissão')),
                ('usuario_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='secretary', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Secretário',
                'verbose_name_plural': 'Secretários',
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hipertensao', models.BooleanField(default=False, verbose_name='Hipertensão')),
                ('depressao', models.BooleanField(default=False, verbose_name='Depressão')),
                ('ansiedade', models.BooleanField(default=False, verbose_name='Ansiedade')),
                ('diabetes_tipo_1', models.BooleanField(default=False, verbose_name='Diabetes tipo 1')),
                ('diabetes_tipo_2', models.BooleanField(default=False, verbose_name='Diabetes tipo 2')),
                ('hipotireoidismo', models.BooleanField(default=False, verbose_name='Hipotireoidismo')),
                ('hepatite_b', models.BooleanField(default=False, verbose_name='Hepatite B')),
                ('hepatite_c', models.BooleanField(default=False, verbose_name='Hepatite C')),
                ('asma', models.BooleanField(default=False, verbose_name='Asma')),
                ('epilepsia', models.BooleanField(default=False, verbose_name='Epilepsia')),
                ('aids', models.BooleanField(default=False, verbose_name='aids')),
                ('avc', models.BooleanField(default=False, verbose_name='AVC')),
                ('demencia', models.BooleanField(default=False, verbose_name='Demência')),
                ('altura', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Altura (cm)')),
                ('peso', models.FloatField(blank=True, null=True, verbose_name='Peso (kg)')),
                ('informacoes_adicionais', models.TextField(blank=True, null=True, verbose_name='Informações adicionais')),
                ('usuario_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registro_profissional', models.CharField(max_length=255, verbose_name='Registro profissional')),
                ('usuario_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Médico',
                'verbose_name_plural': 'Médicos',
            },
        ),
    ]
